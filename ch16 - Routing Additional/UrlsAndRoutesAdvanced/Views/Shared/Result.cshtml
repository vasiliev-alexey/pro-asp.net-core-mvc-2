@model Result
@{
    ViewData["Title"] = "Result";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>Routing</title>
    <link rel="stylesheet" asp-href-include="liЬ/bootstrap/dist/css/*.
min.css"/>
</head>
<body class="m-1 p-1">
<table class="table table-bordered table-striped table-sm">
    <tr>
        <th>Controller:</th><td>@Model.Controller</td>
    </tr>
    <tr>
        <th>Action:</th><td>@Model.Action</td>
    </tr>
    @foreach (var key in Model.Data.Keys)
    {
        <tr>
            <th>@key :</th><td>@Model.Data[key]</td>
        </tr>
    }
</table>
<a asp-action="CustomVariable">This is an outgoing URL</a>

<a asp-controller="Admin" asp-action="Index">
    This targets another controller
</a>

<div>
    <a class="btn-link" asp-controller="Home" asp-action="Index" asp-route-id="Hello">
        Ссылка 2
    </a>
</div>

<div>
    <a class="btn btn-link" asp-controller="Home" asp-action="Index" asp-route-id="Hello"
       asp-protocol="https" asp-host="myserver.mydomain.com"
       asp-fragment="myFragment">
        This is an outgoing URL
    </a>
</div>
    
<div>
    <a asp-route="out">This is an outgoinq URL with out template</a>
</div>
    
<p>URL: @Url.Action("CustomVariable", "Home", new { id = 100 })</p>

</body>
</html>